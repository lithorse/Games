//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Games.Client.GamesServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Game", Namespace="http://schemas.datacontract.org/2004/07/Games.Models")]
    [System.SerializableAttribute()]
    public partial class Game : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GamesServices.IGamesService")]
    public interface IGamesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/GetGames", ReplyAction="http://tempuri.org/IGamesService/GetGamesResponse")]
        System.Collections.Generic.List<Games.Client.GamesServices.Game> GetGames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/GetGames", ReplyAction="http://tempuri.org/IGamesService/GetGamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Games.Client.GamesServices.Game>> GetGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/AddGame", ReplyAction="http://tempuri.org/IGamesService/AddGameResponse")]
        void AddGame(Games.Client.GamesServices.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/AddGame", ReplyAction="http://tempuri.org/IGamesService/AddGameResponse")]
        System.Threading.Tasks.Task AddGameAsync(Games.Client.GamesServices.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/UpdateGame", ReplyAction="http://tempuri.org/IGamesService/UpdateGameResponse")]
        bool UpdateGame(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/UpdateGame", ReplyAction="http://tempuri.org/IGamesService/UpdateGameResponse")]
        System.Threading.Tasks.Task<bool> UpdateGameAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/DeleteGame", ReplyAction="http://tempuri.org/IGamesService/DeleteGameResponse")]
        bool DeleteGame(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGamesService/DeleteGame", ReplyAction="http://tempuri.org/IGamesService/DeleteGameResponse")]
        System.Threading.Tasks.Task<bool> DeleteGameAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGamesServiceChannel : Games.Client.GamesServices.IGamesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GamesServiceClient : System.ServiceModel.ClientBase<Games.Client.GamesServices.IGamesService>, Games.Client.GamesServices.IGamesService {
        
        public GamesServiceClient() {
        }
        
        public GamesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GamesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GamesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Games.Client.GamesServices.Game> GetGames() {
            return base.Channel.GetGames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Games.Client.GamesServices.Game>> GetGamesAsync() {
            return base.Channel.GetGamesAsync();
        }
        
        public void AddGame(Games.Client.GamesServices.Game game) {
            base.Channel.AddGame(game);
        }
        
        public System.Threading.Tasks.Task AddGameAsync(Games.Client.GamesServices.Game game) {
            return base.Channel.AddGameAsync(game);
        }
        
        public bool UpdateGame(int id, string name) {
            return base.Channel.UpdateGame(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGameAsync(int id, string name) {
            return base.Channel.UpdateGameAsync(id, name);
        }
        
        public bool DeleteGame(int id) {
            return base.Channel.DeleteGame(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGameAsync(int id) {
            return base.Channel.DeleteGameAsync(id);
        }
    }
}
